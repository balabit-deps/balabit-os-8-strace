Take upstream changes to disable this test on mips

--- a/tests/umovestr_cached.test	2020-04-07 17:02:24.956166544 +0100
+++ b/tests/umovestr_cached.test	2020-04-07 17:02:15.860114447 +0100
@@ -2,22 +2,30 @@
 #
 # Check effectiveness of umovestr memory caching.
 #
-# Copyright (c) 2017-2019 Dmitry V. Levin <ldv@altlinux.org>
+# Copyright (c) 2017-2020 Dmitry V. Levin <ldv@altlinux.org>
 # All rights reserved.
 #
 # SPDX-License-Identifier: GPL-2.0-or-later
 
 . "${srcdir=.}/init.sh"
 
-run_strace_match_diff -e trace=writev
-
-if [ "$STRACE_ARCH" = ia64 ]; then
-	# ia64 invokes extra process_vm_readv syscalls to obtain syscall
-	# arguments, see linux/ia64/get_syscall_args.c for details.
-	skip_ "the test is not supported on $STRACE_ARCH yet"
-fi
-
 check_prog grep
+$STRACE -d -enone / > /dev/null 2> "$LOG"
+grep -x "[^:]*strace: PTRACE_GET_SYSCALL_INFO works" "$LOG" > /dev/null || {
+	# PTRACE_GET_SYSCALL_INFO does not work
+	case "$STRACE_ARCH:$MIPS_ABI" in
+		ia64:|mips:o32)
+		# ia64 invokes extra process_vm_readv syscalls to obtain syscall
+		# arguments, see linux/ia64/get_syscall_args.c for details.
+		# mips o32 obtains the first four syscalls arguments from registers
+		# and invokes extra process_vm_readv syscalls to obtain remaining
+		# syscall arguments, see linux/mips/get_syscall_args.c for details.
+		skip_ "the test is not supported on $STRACE_ARCH yet"
+		;;
+	esac
+}
+
+run_strace_match_diff -e trace=writev
 
 run_strace -qq -esignal=none -eprocess_vm_readv -z \
 	-o '|grep -c ^process_vm_readv > count' \
--- a/tests-m32/umovestr_cached.test	2020-04-07 17:02:24.956166544 +0100
+++ b/tests-m32/umovestr_cached.test	2020-04-07 17:02:15.860114447 +0100
@@ -2,22 +2,30 @@
 #
 # Check effectiveness of umovestr memory caching.
 #
-# Copyright (c) 2017-2019 Dmitry V. Levin <ldv@altlinux.org>
+# Copyright (c) 2017-2020 Dmitry V. Levin <ldv@altlinux.org>
 # All rights reserved.
 #
 # SPDX-License-Identifier: GPL-2.0-or-later
 
 . "${srcdir=.}/init.sh"
 
-run_strace_match_diff -e trace=writev
-
-if [ "$STRACE_ARCH" = ia64 ]; then
-	# ia64 invokes extra process_vm_readv syscalls to obtain syscall
-	# arguments, see linux/ia64/get_syscall_args.c for details.
-	skip_ "the test is not supported on $STRACE_ARCH yet"
-fi
-
 check_prog grep
+$STRACE -d -enone / > /dev/null 2> "$LOG"
+grep -x "[^:]*strace: PTRACE_GET_SYSCALL_INFO works" "$LOG" > /dev/null || {
+	# PTRACE_GET_SYSCALL_INFO does not work
+	case "$STRACE_ARCH:$MIPS_ABI" in
+		ia64:|mips:o32)
+		# ia64 invokes extra process_vm_readv syscalls to obtain syscall
+		# arguments, see linux/ia64/get_syscall_args.c for details.
+		# mips o32 obtains the first four syscalls arguments from registers
+		# and invokes extra process_vm_readv syscalls to obtain remaining
+		# syscall arguments, see linux/mips/get_syscall_args.c for details.
+		skip_ "the test is not supported on $STRACE_ARCH yet"
+		;;
+	esac
+}
+
+run_strace_match_diff -e trace=writev
 
 run_strace -qq -esignal=none -eprocess_vm_readv -z \
 	-o '|grep -c ^process_vm_readv > count' \
--- a/tests-mx32/umovestr_cached.test	2020-04-07 17:02:24.956166544 +0100
+++ b/tests-mx32/umovestr_cached.test	2020-04-07 17:02:15.860114447 +0100
@@ -2,22 +2,30 @@
 #
 # Check effectiveness of umovestr memory caching.
 #
-# Copyright (c) 2017-2019 Dmitry V. Levin <ldv@altlinux.org>
+# Copyright (c) 2017-2020 Dmitry V. Levin <ldv@altlinux.org>
 # All rights reserved.
 #
 # SPDX-License-Identifier: GPL-2.0-or-later
 
 . "${srcdir=.}/init.sh"
 
-run_strace_match_diff -e trace=writev
-
-if [ "$STRACE_ARCH" = ia64 ]; then
-	# ia64 invokes extra process_vm_readv syscalls to obtain syscall
-	# arguments, see linux/ia64/get_syscall_args.c for details.
-	skip_ "the test is not supported on $STRACE_ARCH yet"
-fi
-
 check_prog grep
+$STRACE -d -enone / > /dev/null 2> "$LOG"
+grep -x "[^:]*strace: PTRACE_GET_SYSCALL_INFO works" "$LOG" > /dev/null || {
+	# PTRACE_GET_SYSCALL_INFO does not work
+	case "$STRACE_ARCH:$MIPS_ABI" in
+		ia64:|mips:o32)
+		# ia64 invokes extra process_vm_readv syscalls to obtain syscall
+		# arguments, see linux/ia64/get_syscall_args.c for details.
+		# mips o32 obtains the first four syscalls arguments from registers
+		# and invokes extra process_vm_readv syscalls to obtain remaining
+		# syscall arguments, see linux/mips/get_syscall_args.c for details.
+		skip_ "the test is not supported on $STRACE_ARCH yet"
+		;;
+	esac
+}
+
+run_strace_match_diff -e trace=writev
 
 run_strace -qq -esignal=none -eprocess_vm_readv -z \
 	-o '|grep -c ^process_vm_readv > count' \
